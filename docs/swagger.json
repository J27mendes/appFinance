{
  "swagger": "2.0",
  "info": {
    "title": "API Finance",
    "description": "API for Finance App that allows users to manage their finances",
    "version": "1.0.0"
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer' followed by your token. Example: 'Bearer peKdkOkdnOndeiIUHDNENjhh18d...' "
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/users": {
      "post": {
        "summary": "Create a new user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "description": "Created user with correct params",
            "schema": {
              "$ref": "#/definitions/CreateUserParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": " #/definitions/UserWithToken"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get authenticated user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User found successfully",
            "schema": {
              "$ref": " #/definitions/User"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update authenticated user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateUserParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": " #/definitions/User"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete authenticated user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "$ref": " #/definitions/User"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "Login user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "description": "Created user with correct params",
            "schema": {
              "$ref": "#/definitions/LoginUserParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "$ref": " #/definitions/UserWithToken"
            }
          },
          "400": {
            "description": "Please provide a valid e-mail",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponseError"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/users/refreshToken": {
      "post": {
        "summary": "Refresh User Token",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "description": "Created user with correct params",
            "schema": {
              "$ref": "#/definitions/RefreshUserParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens generated successfully",
            "schema": {
              "$ref": " #/definitions/Tokens"
            }
          },
          "401": {
            "description": "Invalid tokens",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponseError"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/users/balance": {
      "get": {
        "summary": "Get balance authenticated",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Balance by User found successfully",
            "schema": {
              "$ref": " #/definitions/UserBalance"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/transactions": {
      "post": {
        "summary": "Create a new transaction for the authenticated user",
        "tags": ["Transaction"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "schema": {
              "$ref": "#/definitions/TransactionResponse"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponseError"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get authenticated user transactions",
        "tags": ["Transaction"],
        "responses": {
          "200": {
            "description": "Transaction found successfully",
            "schema": {
              "$ref": "#/definitions/TransactionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponseError"
            }
          },
          "404": {
            "description": "Trasnsaction not found",
            "schema": {
              "$ref": "#/definitions/TransactionNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/transactions/{transactionId}": {
      "patch": {
        "summary": "Update a new transaction by Transaction Id",
        "tags": ["Transaction"],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "description": "The ID of the transaction that will be updated.",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction created successfully",
            "schema": {
              "$ref": "#/definitions/TransactionResponse"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponseError"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "$ref": "#/definitions/TransactionNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a transaction by transaction Id",
        "tags": ["Transaction"],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "description": "The ID of the transaction that will be deleted.",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction deleted successfully",
            "schema": {
              "$ref": "#/definitions/TransactionResponse"
            }
          },
          "400": {
            "description": "Id Invalid",
            "schema": {
              "$ref": "#/definitions/InvalidIdResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponseError"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "$ref": "#/definitions/TransactionNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "CreateUserParams": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Mari"
        },
        "last_name": {
          "type": "string",
          "example": "Suassuna"
        },
        "email": {
          "type": "string",
          "example": "marissuna@yahoo.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "LoginUserParams": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "marissuna@yahoo.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "RefreshUserParams": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "example": "C1hMDg2LTRiZGYtYWUhbGciOiJIUzI1NiIsIn.5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2YTkwNjdjMC1hMDg2LTRiZGYtYWUyMi05YWYxZjJjMGI3NjQiLCJpYXQiOjE3Mzk0NTQwMTIsImV4cCI6.dsafadsdMzk0NTQwMTIsImV4cCI6MTczOTQ1NDkxMn0"
        }
      }
    },
    "Tokens": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2YTkwNjdjMC1hMDg2LTRiZGYtYWUyMi05YWYxZjJjMGI3NjQiLCJpYXQiOjE3Mzk0NTQwMTIsImV4cCI6MTczOTQ1NDkxMn0.dhOMUBo1-oBP3zkmm6Y1qXKe87NYT87Qf3q8l1RNwjc"
        },
        "refreshToken": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2YTkwNjdjMC1hMDg2LTRiZGYtYWUyMi05YWYxZjJjMGI3NjQiLCJpYXQiOjE3Mzk0NTQwMTIsImV4cCI6MTczOTQ1NDkxMn0.C1hMDg2-TRiYxZjJjMGI3NjQiLCJMTczOTQ1NDkxMn0"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "0d2ea334-cc30-4085-a149-71fb414ef9f7"
        },
        "first_name": {
          "type": "string",
          "example": "Mari"
        },
        "Last_name": {
          "type": "string",
          "example": "Suassuna"
        },
        "email": {
          "type": "string",
          "example": "marissuna@yahoo.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "UserWithToken": {
      "allOf": [
        {
          "$ref": " #/definitions/User"
        },
        {
          "type": "object",
          "properties": {
            "tokens": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "Bearer 43c843cf-e56a-4487-bb61-e603356a0ceb"
                },
                "refereshToken": {
                  "type": "string",
                  "example": "Bearer e206384e-ec84-44bc-9b91-2fa0ea668c79"
                }
              }
            }
          }
        }
      ]
    },
    "UserBalance": {
      "type": "object",
      "properties": {
        "earnings": {
          "type": "string",
          "example": "8000"
        },
        "expenses": {
          "type": "string",
          "example": "1000"
        },
        "investments": {
          "type": "string",
          "example": "1000"
        },
        "balance": {
          "type": "string",
          "example": "6000"
        }
      }
    },
    "TransactionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "0d2ea334-cc30-4085-a149-71fb414ef9f7"
        },
        "user_id": {
          "type": "string",
          "example": "0d2ea334-cc30-4085-a149-71fb414ef9f7"
        },
        "name": {
          "type": "string",
          "example": "product"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "example": "2021-10-10T00:00:00.000Z"
        },
        "amount": {
          "type": "number",
          "format": "float",
          "example": 1000.0
        },
        "type": {
          "type": "string",
          "enum": ["EARNING", "EXPENSE", "INVESTMENT"],
          "example": "EARNING"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "product"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "example": "2021-10-10T00:00:00.000Z"
        },
        "amount": {
          "type": "number",
          "format": "float",
          "example": 1000.0
        },
        "type": {
          "type": "string",
          "enum": ["EARNING", "EXPENSE", "INVESTMENT"],
          "example": "EARNING"
        }
      }
    },
    "UpdateTransaction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "product"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "example": "2021-10-10T00:00:00.000Z"
        },
        "amount": {
          "type": "number",
          "format": "float",
          "example": 1000.0
        },
        "type": {
          "type": "string",
          "enum": ["EARNING", "EXPENSE", "INVESTMENT"],
          "example": "EARNING"
        }
      }
    },
    "InvalidIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Invalid Id Response"
        }
      }
    },
    "InternalServerError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Internal server error"
        }
      }
    },
    "UserNotFoundResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "User not found"
        }
      }
    },
    "InvalidParamsResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Invalid parameter, message depending on the request response"
        }
      }
    },
    "TransactionNotFoundResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Transaction not found"
        }
      }
    },
    "UnauthorizedResponseError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Unauthorized"
        }
      }
    }
  }
}
